'use babel';

function mouseEvent(type, properties) {
  var defaults = {
    bubbles: true,
    cancelable: type !== 'mousemove',
    view: window,
    detail: 0,
    pageX: 0,
    pageY: 0,
    clientX: 0,
    clientY: 0,
    ctrlKey: false,
    altKey: false,
    shiftKey: false,
    metaKey: false,
    button: 0,
    relatedTarget: undefined
  };

  for (var k in defaults) {
    var v = defaults[k];
    if (!(properties[k] != null)) {
      properties[k] = v;
    }
  }

  var e = new MouseEvent(type, properties);

  for (var k in properties) {
    if (e[k] !== properties[k]) {
      e[k] = properties[k];
    }
  }

  return e;
}

function touchEvent(type, touches) {
  var event = new Event(type, {
    bubbles: true,
    cancelable: true,
    view: window,
    ctrlKey: false,
    altKey: false,
    shiftKey: false,
    metaKey: false,
    relatedTarget: undefined
  });
  event.touches = event.changedTouches = event.targetTouches = touches;

  return event;
}

function objectCenterCoordinates(obj) {
  var _obj$getBoundingClientRect = obj.getBoundingClientRect();

  var top = _obj$getBoundingClientRect.top;
  var left = _obj$getBoundingClientRect.left;
  var width = _obj$getBoundingClientRect.width;
  var height = _obj$getBoundingClientRect.height;

  return { x: left + width / 2, y: top + height / 2 };
}

function exists(value) {
  return typeof value !== 'undefined' && value !== null;
}

module.exports = { objectCenterCoordinates: objectCenterCoordinates, mouseEvent: mouseEvent };['mousedown', 'mousemove', 'mouseup', 'click'].forEach(function (key) {
  module.exports[key] = function (obj) {
    var _ref = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    var x = _ref.x;
    var y = _ref.y;
    var cx = _ref.cx;
    var cy = _ref.cy;
    var btn = _ref.btn;

    if (!(typeof x !== 'undefined' && x !== null && typeof y !== 'undefined' && y !== null)) {
      var o = objectCenterCoordinates(obj);
      x = o.x;
      y = o.y;
    }

    if (!(typeof cx !== 'undefined' && cx !== null && typeof cy !== 'undefined' && cy !== null)) {
      cx = x;
      cy = y;
    }

    obj.dispatchEvent(mouseEvent(key, {
      pageX: x, pageY: y, clientX: cx, clientY: cy, button: btn
    }));
  };
});

module.exports.mousewheel = function (obj) {
  var deltaX = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];
  var deltaY = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];

  obj.dispatchEvent(mouseEvent('mousewheel', {
    deltaX: deltaX,
    deltaY: deltaY,
    wheelDeltaX: deltaX,
    wheelDeltaY: deltaY
  }));
};['touchstart', 'touchmove', 'touchend'].forEach(function (key) {
  module.exports[key] = function (obj, touches) {
    if (!Array.isArray(touches)) {
      touches = [touches];
    }

    touches.forEach(function (touch) {
      if (!exists(touch.target)) {
        touch.target = obj;
      }

      if (!(exists(touch.pageX) && exists(touch.pageY))) {
        var o = objectCenterCoordinates(obj);
        touch.pageX = exists(touch.x) ? touch.x : o.x;
        touch.pageY = exists(touch.y) ? touch.y : o.y;
      }

      if (!(exists(touch.clientX) && exists(touch.clientY))) {
        touch.clientX = touch.pageX;
        touch.clientY = touch.pageY;
      }
    });

    obj.dispatchEvent(touchEvent(key, touches));
  };
});
//# sourceMappingURL=data:application/json;base64,
//# sourceURL=/home/key/.atom/packages/minimap/spec/helpers/events.js
